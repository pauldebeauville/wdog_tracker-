name: WDOG watcher

on:
  schedule:
    - cron: "*/30 * * * *"   # toutes les 30 minutes
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    defaults:
      run:
        working-directory: Snipe-Wdog   # ← dossier où se trouve ton watch-wdog.js

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Check required secrets
        run: |
          test -n "${{ secrets.SOLANA_RPC_URL }}"      || (echo "Missing SOLANA_RPC_URL" && exit 1)
          test -n "${{ secrets.WDOG_MINT }}"           || (echo "Missing WDOG_MINT" && exit 1)
          test -n "${{ secrets.WDOG_TOP_WALLET }}"     || (echo "Missing WDOG_TOP_WALLET" && exit 1)
          test -n "${{ secrets.TELEGRAM_BOT_TOKEN }}"  || (echo "Missing TELEGRAM_BOT_TOKEN" && exit 1)
          test -n "${{ secrets.TELEGRAM_CHAT_ID }}"    || (echo "Missing TELEGRAM_CHAT_ID" && exit 1)

      - name: Install dependencies
        run: npm install

      - name: Telegram test ping
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set -e
          curl -sS -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="WDOG watcher test OK ✅ ($(date -u +"%Y-%m-%d %H:%M UTC"))" \
            -d parse_mode="Markdown"


      - name: Run WDOG watcher
        env:
          SOLANA_RPC_URL: ${{ secrets.SOLANA_RPC_URL }}
          WDOG_MINT: ${{ secrets.WDOG_MINT }}
          WDOG_TOP_WALLET: ${{ secrets.WDOG_TOP_WALLET }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: node watch-wdog.js

      - name: Commit balances file if changed
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          FILE=""
          for f in balances_top.json balances.json; do
            if [ -f "$f" ]; then
              FILE="$f"
              break
            fi
          done

          if [ -z "$FILE" ]; then
            echo "No balances file found."
            exit 0
          fi

          git add "$FILE"
          if ! git diff --cached --quiet; then
            git commit -m "chore: update $FILE"
            git push
            echo "Committed $FILE"
          else
            echo "No changes to commit."
          fi
